version: '3.9'

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  kong-net:
    external: false
#    driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:${POSTGRES_TAG}
    container_name: kong-database
    environment:
      POSTGRES_DB: ${KONG_DB_NAME:-kong}
      POSTGRES_USER: ${KONG_DB_USERNAME:-kong}      
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD:-kong}
    secrets:
      - kong_postgres_password
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:${POSTGRES_TARGET_DATA_VOLUME}
    ports:
      - $POSTGRES_PORT:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_DB_USERNAME:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    entrypoint: sh -c "sleep 20 && kong migrations bootstrap -v"
    depends_on:
      - kong-database
    links:
      - kong-database   
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_DB_HOST}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "kong"]
#      interval: 5s
#      timeout: 5s
#      retries: 5

  #######################################
  # Kong: The API Gateway
  #######################################
  kong-gateway:
    platform: linux/arm64
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    container_name: kong-gateway    
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_DB_HOST}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_ADMIN_ACCESS_LOG: "${KONG_ADMIN_ACCESS_LOG:-/dev/stdout}"
      KONG_ADMIN_ERROR_LOG: "${KONG_ADMIN_ERROR_LOG:-/dev/sterr}"
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_PROXY_LISTEN_SSL: ${KONG_PROXY_LISTEN_SSL}
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG:-/dev/stdout}
      KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG:-/dev/stderr}
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"      
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    depends_on:
      - kong-migration
      - kong-database
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8443:8443
      - 8444:8444
      - 8445:8445
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_DB_PASSWORD}@kong-database:5432/konga_db"
    restart: on-failure
    networks:
      - kong-net
    links:
      - kong-database
    depends_on:
      - kong-database
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "kong"]
#      interval: 10s
#      timeout: 10s
#      retries: 5

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    container_name: konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: ${KONG_DATABASE}
      #DB_URI: postgresql://kong:${KONG_DB_PASSWORD:-kong}@kong-database:5432/konga_db
      DB_URI: postgresql://kong:${KONG_DB_PASSWORD}@kong-database:5432/konga_db
      DB_HOST: ${KONGA_DB_HOST}
      DB_PORT: ${KONGA_DB_PORT}
      DB_DATABASE: ${KONGA_DB_NAME}
      DB_USER: ${KONGA_DB_USERNAME}
      DB_PASSWORD: ${KONGA_DB_PASSWORD}
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}      
      NODE_ENV: ${KONGA_ENV}
      KONGA_HOOK_TIMEOUT: ${KONGA_HOOK_TIMEOUT}
    depends_on:
      - kong-database
    ports:
      - $KONGA_PORT:1337

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD      